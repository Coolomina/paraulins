# Pre-commit hooks for Paraulins project
# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks

repos:
  # Pre-commit hooks for general file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
      - id: end-of-file-fixer
      - id: check-yaml
        args: [--unsafe]  # Allow custom YAML tags in docker-compose
      - id: check-toml
      - id: check-json
      - id: check-added-large-files
        args: [--maxkb=1000]  # Prevent files larger than 1MB
      - id: check-merge-conflict
      - id: debug-statements
      - id: check-executables-have-shebangs
      - id: check-case-conflict
      - id: mixed-line-ending
        args: [--fix=lf]

  # Local hooks using PDM scripts
  - repo: local
    hooks:
      # Code formatting with Black (using PDM)
      - id: black
        name: Format code with Black
        entry: pdm run format
        language: system
        types: [python]
        pass_filenames: false

      # Import sorting with isort (using PDM)
      - id: isort
        name: Sort imports with isort
        entry: pdm run isort-check
        language: system
        types: [python]
        pass_filenames: false

      # Linting with flake8 (using PDM)
      - id: flake8
        name: Lint with flake8
        entry: pdm run lint
        language: system
        types: [python]
        pass_filenames: false

  # Security checks
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.10
    hooks:
      - id: bandit
        args: [--skip=B101]  # Skip assert_used test

  # Dockerfile linting
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        args: [--ignore, DL3008, --ignore, DL3009]  # Ignore apt-get version pinning

  # Local hooks
  - repo: local
    hooks:
      # Run tests with pytest (using PDM)
      - id: pytest
        name: Run tests
        entry: pdm run test
        language: system
        types: [python]
        pass_filenames: false
        always_run: true

      # Check for TODO/FIXME comments in production code
      - id: check-todos
        name: Check for TODO/FIXME comments
        entry: bash -c 'if grep -r "TODO\|FIXME\|XXX" --include="*.py" --exclude-dir=tests --exclude-dir=.venv --exclude-dir=venv --exclude-dir=env .; then echo "TODO/FIXME comments found in production code"; exit 1; fi'
        language: system
        pass_filenames: false

# Configuration for pre-commit
default_language_version:
  python: python3.12

# Global excludes
exclude: |
  (?x)^(
    __pycache__/.*|
    \.venv/.*|
    venv/.*|
    env/.*|
    \.git/.*|
    data/.*|
    htmlcov/.*|
    \.pytest_cache/.*
  )$
